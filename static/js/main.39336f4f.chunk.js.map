{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","visibleGoods","sort","prev","next","LENGTH","length","ALPHABET","localeCompare","reverse","getReorderedGoods","className","onClick","type","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAM,WACjB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA/BD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAMC,GACvB,OAAQN,GACN,KAAKP,EAASc,OACZ,OAAOF,EAAKG,OAASF,EAAKE,OAE5B,KAAKf,EAASgB,SACZ,OAAOJ,EAAKK,cAAcJ,GAE5B,KAAKb,EAASM,KACd,QACE,OAAO,MAITF,GACFM,EAAaQ,UAGRR,EAOOS,CAAkBlB,EAAiB,CAAEM,WAAUH,eAQ7D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAYR,EAASgB,WACpCM,KAAK,SACLF,UAAWb,IAAaP,EAASgB,SAC7B,iBACA,0BALN,iCAUA,wBACEK,QAAS,kBAAMb,EAAYR,EAASc,SACpCQ,KAAK,SACLF,UAAWb,IAAaP,EAASc,OAC7B,oBACA,6BALN,4BAUA,wBACEO,QA9BQ,kBAAMhB,GAAeD,IA+B7BkB,KAAK,SACLF,UAAWhB,EACP,oBACA,6BALN,sBASEG,GAAYH,IACZ,wBACEiB,QAvCI,WACZb,EAAYR,EAASM,MACrBD,GAAc,IAsCNiB,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGX,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.39336f4f.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prev, next) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return prev.length - next.length;\n\n      case SortType.ALPHABET:\n        return prev.localeCompare(next);\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  const reverse = () => setIsReversed(!isReversed);\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(SortType.ALPHABET)}\n          type=\"button\"\n          className={sortType === SortType.ALPHABET\n            ? 'button is-info'\n            : 'button is-info is-light'}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(SortType.LENGTH)}\n          type=\"button\"\n          className={sortType === SortType.LENGTH\n            ? 'button is-success'\n            : 'button is-success is-light'}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={isReversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n        >\n          Reverse\n        </button>\n        {(sortType || isReversed) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}